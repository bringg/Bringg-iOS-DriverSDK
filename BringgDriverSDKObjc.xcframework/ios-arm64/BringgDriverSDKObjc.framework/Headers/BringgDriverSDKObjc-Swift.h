// Generated by Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
#ifndef BRINGGDRIVERSDKOBJC_SWIFT_H
#define BRINGGDRIVERSDKOBJC_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="BringgDriverSDKObjc",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@protocol ActiveCustomerManagerObjcProtocol;

SWIFT_PROTOCOL("_TtP19BringgDriverSDKObjc33ActiveCustomerManagerObjcDelegate_")
@protocol ActiveCustomerManagerObjcDelegate
- (void)activeCustomerManagerActiveTaskUpdated:(id <ActiveCustomerManagerObjcProtocol> _Nonnull)sender;
- (void)activeCustomerManagerDidLogout;
@end

@class MulticastDelegateSubscription;
@class CustomerVehicleObjc;
@class TaskObjc;
enum DriverActivityType : NSInteger;

SWIFT_PROTOCOL("_TtP19BringgDriverSDKObjc33ActiveCustomerManagerObjcProtocol_")
@protocol ActiveCustomerManagerObjcProtocol
- (MulticastDelegateSubscription * _Nonnull)addDelegate:(id <ActiveCustomerManagerObjcDelegate> _Nonnull)delegate;
@property (nonatomic, readonly) BOOL isLoggedIn;
- (void)loginWithToken:(NSString * _Nonnull)token secret:(NSString * _Nonnull)secret region:(NSString * _Nonnull)region completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (void)logoutWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)startTaskWith:(NSInteger)taskId completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (void)arriveAtWaypointWithCompletion:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (void)arriveAtWaypointWithCustomerVehicle:(CustomerVehicleObjc * _Nonnull)customerVehicle completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (void)leaveWaypointWithCompletion:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (void)updateWaypointETAWithEta:(NSDate * _Nonnull)eta completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
@property (nonatomic, readonly, strong) TaskObjc * _Nullable activeTask;
- (void)setUserTransportType:(enum DriverActivityType)transportType completion:(void (^ _Nullable)(NSError * _Nullable))completion;
@end

typedef SWIFT_ENUM(NSInteger, AddressType, open) {
  AddressTypeNone = -1,
  AddressTypeCommercial = 1,
  AddressTypeResidential = 2,
  AddressTypeEducational = 3,
  AddressTypeGovernment = 4,
  AddressTypeMedical = 5,
  AddressTypeIndustrial = 6,
};

typedef SWIFT_ENUM(NSInteger, AllowShareWithCustomer, open) {
  AllowShareWithCustomerDisabled = 0,
  AllowShareWithCustomerDefaultFalse = 1,
  AllowShareWithCustomerDefaultTrue = 2,
};

@protocol LogReportsManagerProtocol;

SWIFT_CLASS("_TtC19BringgDriverSDKObjc6Bringg")
@interface Bringg : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) Bringg * _Null_unspecified shared;)
+ (Bringg * _Null_unspecified)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(Bringg * _Null_unspecified)value;
@property (nonatomic, readonly, strong) id <LogReportsManagerProtocol> _Nonnull logReportManager;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@protocol LoggerProtocol;
@class BringgSDKInitOptions;

@interface Bringg (SWIFT_EXTENSION(BringgDriverSDKObjc))
+ (NSError * _Nullable)initializeSDKWithLogger:(id <LoggerProtocol> _Nullable)logger bringgSDKInitOptions:(BringgSDKInitOptions * _Nonnull)bringgSDKInitOptions SWIFT_WARN_UNUSED_RESULT;
@end

@protocol LoginManagerObjcProtocol;
@protocol ShiftManagerObjcProtocol;
@protocol UserManagerObjcProtocol;

SWIFT_CLASS("_TtC19BringgDriverSDKObjc10BringgObjc")
@interface BringgObjc : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) BringgObjc * _Null_unspecified shared;)
+ (BringgObjc * _Null_unspecified)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(BringgObjc * _Null_unspecified)value;
@property (nonatomic, readonly, strong) id <LoginManagerObjcProtocol> _Nonnull loginManager;
@property (nonatomic, readonly, strong) id <ShiftManagerObjcProtocol> _Nonnull shiftManager;
@property (nonatomic, readonly, strong) id <ActiveCustomerManagerObjcProtocol> _Nonnull activeCustomerManager;
@property (nonatomic, readonly, strong) id <UserManagerObjcProtocol> _Nonnull userManager;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BringgObjc (SWIFT_EXTENSION(BringgDriverSDKObjc))
+ (NSError * _Nullable)initializeSDKWithLogger:(id <LoggerProtocol> _Nullable)logger bringgSDKInitOptions:(BringgSDKInitOptions * _Nullable)bringgSDKInitOptions SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC19BringgDriverSDKObjc20BringgSDKInitOptions")
@interface BringgSDKInitOptions : NSObject
+ (BringgSDKInitOptions * _Nonnull)fromFlagsWithFlags:(NSArray<NSString *> * _Nullable)flags SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithAvoidUsingMotion:(BOOL)avoidUsingMotion avoidUsingBluetooth:(BOOL)avoidUsingBluetooth OBJC_DESIGNATED_INITIALIZER;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) BringgSDKInitOptions * _Nonnull default_;)
+ (BringgSDKInitOptions * _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC19BringgDriverSDKObjc24BringgSDKInitOptionsKeys")
@interface BringgSDKInitOptionsKeys : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




@class MerchantSelectionObjc;
@class OpenIdConfigurationObjc;

SWIFT_CLASS("_TtC19BringgDriverSDKObjc33ChangeToOpenIdConnectResponseObjc")
@interface ChangeToOpenIdConnectResponseObjc : NSObject
@property (nonatomic, readonly, strong) MerchantSelectionObjc * _Nonnull merchantSelection;
@property (nonatomic, readonly, strong) OpenIdConfigurationObjc * _Nonnull openIdConfiguration;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;
enum ContactType : NSInteger;

SWIFT_CLASS("_TtC19BringgDriverSDKObjc11ContactObjc")
@interface ContactObjc : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable customerId;
@property (nonatomic, readonly) enum ContactType contactType;
@property (nonatomic, readonly, copy) NSString * _Nullable contactValue;
@property (nonatomic, readonly) BOOL sharingAllowed;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, ContactType, open) {
  ContactTypeUnknown = 0,
  ContactTypePhone = 1,
  ContactTypeEmail = 2,
};

/// Similar to StartShiftErrorType
typedef SWIFT_ENUM(NSInteger, CreatePendingShiftErrorType, open) {
  CreatePendingShiftErrorTypeNone = 0,
  CreatePendingShiftErrorTypeAlreadyExists = 1,
  CreatePendingShiftErrorTypeAlreadyExistsOnDifferentDevice = 2,
  CreatePendingShiftErrorTypeNotAllowedDueToDistanceFromHome = 3,
  CreatePendingShiftErrorTypeNotAllowedDueToScheduleTimeOfDay = 4,
  CreatePendingShiftErrorTypeNotAllowedDueToDistanceFromScheduleHomeAndTimeOfDay = 5,
};


SWIFT_CLASS("_TtC19BringgDriverSDKObjc12CustomerObjc")
@interface CustomerObjc : NSObject
@property (nonatomic, readonly) NSInteger id;
@property (nonatomic, readonly, copy) NSString * _Nullable address;
@property (nonatomic, readonly, copy) NSString * _Nullable addressSecondLine;
@property (nonatomic, readonly, strong) NSNumber * _Nullable lat;
@property (nonatomic, readonly, strong) NSNumber * _Nullable lng;
@property (nonatomic, readonly, copy) NSString * _Nullable image;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable phone;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) BOOL allowSendingSMS;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19BringgDriverSDKObjc19CustomerVehicleObjc")
@interface CustomerVehicleObjc : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable id;
@property (nonatomic, readonly) BOOL saveVehicle;
@property (nonatomic, readonly, copy) NSString * _Nullable licensePlate;
@property (nonatomic, readonly, copy) NSString * _Nullable color;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
@property (nonatomic, readonly, copy) NSString * _Nullable parkingSpot;
- (nonnull instancetype)initWithId:(NSInteger)id saveVehicle:(BOOL)saveVehicle licensePlate:(NSString * _Nullable)licensePlate color:(NSString * _Nullable)color model:(NSString * _Nullable)model parkingSpot:(NSString * _Nullable)parkingSpot OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSaveVehicle:(BOOL)saveVehicle licensePlate:(NSString * _Nullable)licensePlate color:(NSString * _Nullable)color model:(NSString * _Nullable)model parkingSpot:(NSString * _Nullable)parkingSpot OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


typedef SWIFT_ENUM(NSInteger, DriverActivityType, open) {
  DriverActivityTypeUnknown = 0,
  DriverActivityTypeStationary = 1,
  DriverActivityTypeWalking = 2,
  DriverActivityTypeRunning = 3,
  DriverActivityTypeBicycle = 4,
  DriverActivityTypeDriving = 5,
  DriverActivityTypePublicTransportation = 6,
};


SWIFT_PROTOCOL("_TtP19BringgDriverSDKObjc25LogReportsManagerProtocol_")
@protocol LogReportsManagerProtocol
- (void)sendLogsToServer;
- (void)getStoredLogsWithCompletion:(void (^ _Nonnull)(NSArray<NSData *> * _Nullable))completion;
@end


SWIFT_PROTOCOL("_TtP19BringgDriverSDKObjc14LoggerProtocol_")
@protocol LoggerProtocol
- (void)logDebug:(NSString * _Nonnull)message file:(NSString * _Nonnull)file function:(NSString * _Nonnull)function line:(NSUInteger)line;
- (void)logInfo:(NSString * _Nonnull)message file:(NSString * _Nonnull)file function:(NSString * _Nonnull)function line:(NSUInteger)line;
- (void)logWarn:(NSString * _Nonnull)message file:(NSString * _Nonnull)file function:(NSString * _Nonnull)function line:(NSUInteger)line;
- (void)logError:(NSString * _Nonnull)message file:(NSString * _Nonnull)file function:(NSString * _Nonnull)function line:(NSUInteger)line;
@end

@class UserObjc;
@protocol UserEventsDelegate;

SWIFT_PROTOCOL("_TtP19BringgDriverSDKObjc24LoginManagerObjcProtocol_")
@protocol LoginManagerObjcProtocol
@property (nonatomic, readonly, strong) UserObjc * _Nullable currentUser;
@property (nonatomic, readonly) BOOL isLoggedIn;
- (MulticastDelegateSubscription * _Nonnull)addDelegate:(id <UserEventsDelegate> _Nonnull)delegate;
- (void)loginWithEmail:(NSString * _Nonnull)email password:(NSString * _Nonnull)password merchant:(MerchantSelectionObjc * _Nullable)merchant completion:(void (^ _Nonnull)(NSArray<MerchantSelectionObjc *> * _Nullable, ChangeToOpenIdConnectResponseObjc * _Nullable, NSError * _Nullable))completion;
- (void)requestVerificationCodeForCountryCode:(NSString * _Nonnull)forCountryCode phone:(NSString * _Nonnull)phone completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (void)loginWithVerificationCode:(NSString * _Nonnull)code countryCode:(NSString * _Nonnull)countryCode phone:(NSString * _Nonnull)phone merchant:(MerchantSelectionObjc * _Nullable)merchant completion:(void (^ _Nonnull)(NSArray<MerchantSelectionObjc *> * _Nullable, ChangeToOpenIdConnectResponseObjc * _Nullable, NSError * _Nullable))completion;
- (void)loginWithQRCode:(NSString * _Nonnull)code completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (void)logoutWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)recoverPasswordForEmail:(NSString * _Nonnull)email completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
@end


SWIFT_CLASS("_TtC19BringgDriverSDKObjc16LoginManagerObjc")
@interface LoginManagerObjc : NSObject <LoginManagerObjcProtocol>
@property (nonatomic, readonly, strong) UserObjc * _Nullable currentUser;
@property (nonatomic, readonly) BOOL isLoggedIn;
- (MulticastDelegateSubscription * _Nonnull)addDelegate:(id <UserEventsDelegate> _Nonnull)delegate;
- (void)loginWithEmail:(NSString * _Nonnull)email password:(NSString * _Nonnull)password merchant:(MerchantSelectionObjc * _Nullable)merchant completion:(void (^ _Nonnull)(NSArray<MerchantSelectionObjc *> * _Nullable, ChangeToOpenIdConnectResponseObjc * _Nullable, NSError * _Nullable))completion;
- (void)requestVerificationCodeForCountryCode:(NSString * _Nonnull)forCountryCode phone:(NSString * _Nonnull)phone completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (void)loginWithVerificationCode:(NSString * _Nonnull)code countryCode:(NSString * _Nonnull)countryCode phone:(NSString * _Nonnull)phone merchant:(MerchantSelectionObjc * _Nullable)merchant completion:(void (^ _Nonnull)(NSArray<MerchantSelectionObjc *> * _Nullable, ChangeToOpenIdConnectResponseObjc * _Nullable, NSError * _Nullable))completion;
- (void)loginWithQRCode:(NSString * _Nonnull)code completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (void)logoutWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)recoverPasswordForEmail:(NSString * _Nonnull)email completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC19BringgDriverSDKObjc35LoginWithEmailAndPasswordErrorCodes")
@interface LoginWithEmailAndPasswordErrorCodes : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger userIsNotADriver;)
+ (NSInteger)userIsNotADriver SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger unauthorized;)
+ (NSInteger)unauthorized SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19BringgDriverSDKObjc21MerchantSelectionObjc")
@interface MerchantSelectionObjc : NSObject
@property (nonatomic, readonly) NSInteger id;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19BringgDriverSDKObjc29MulticastDelegateSubscription")
@interface MulticastDelegateSubscription : NSObject
- (void)stopListening;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end







SWIFT_CLASS("_TtC19BringgDriverSDKObjc23OpenIdConfigurationObjc")
@interface OpenIdConfigurationObjc : NSObject
@property (nonatomic, readonly, copy) NSURL * _Nonnull issuer;
@property (nonatomic, readonly, copy) NSString * _Nonnull clientId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, PickupDropoffOption, open) {
  PickupDropoffOptionNone = -1,
  PickupDropoffOptionPickup = 0,
  PickupDropoffOptionDropoff = 1,
  PickupDropoffOptionPickupAndDropoff = 2,
};


SWIFT_CLASS("_TtC19BringgDriverSDKObjc16ShiftHistoryObjc")
@interface ShiftHistoryObjc : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull id;
@property (nonatomic, readonly, copy) NSDate * _Nullable startDate;
@property (nonatomic, readonly, copy) NSDate * _Nullable endDate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class ShiftObjc;
@protocol ShiftManagerObjcDelegate;
enum StartShiftErrorType : NSInteger;

SWIFT_PROTOCOL("_TtP19BringgDriverSDKObjc24ShiftManagerObjcProtocol_")
@protocol ShiftManagerObjcProtocol
@property (nonatomic, readonly) BOOL isOnShift;
@property (nonatomic, readonly, strong) ShiftObjc * _Nullable currentShift;
- (MulticastDelegateSubscription * _Nonnull)addDelegate:(id <ShiftManagerObjcDelegate> _Nonnull)delegate;
- (void)startShiftWithCompletion:(void (^ _Nonnull)(NSError * _Nullable, enum StartShiftErrorType))completion;
- (void)forceStartShiftWithCompletion:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (void)endShift;
@end


SWIFT_CLASS("_TtC19BringgDriverSDKObjc16ShiftManagerObjc")
@interface ShiftManagerObjc : NSObject <ShiftManagerObjcProtocol>
@property (nonatomic, readonly) BOOL isOnShift;
@property (nonatomic, readonly, strong) ShiftObjc * _Nullable currentShift;
- (MulticastDelegateSubscription * _Nonnull)addDelegate:(id <ShiftManagerObjcDelegate> _Nonnull)delegate;
- (void)startShiftWithCompletion:(void (^ _Nonnull)(NSError * _Nullable, enum StartShiftErrorType))completion;
- (void)forceStartShiftWithCompletion:(void (^ _Nonnull)(NSError * _Nullable))completion;
- (void)endShift;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_PROTOCOL("_TtP19BringgDriverSDKObjc24ShiftManagerObjcDelegate_")
@protocol ShiftManagerObjcDelegate
- (void)shiftStarted;
- (void)shiftEnded;
@end



SWIFT_CLASS("_TtC19BringgDriverSDKObjc9ShiftObjc")
@interface ShiftObjc : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull id;
@property (nonatomic, readonly, copy) NSDate * _Nonnull startDate;
@property (nonatomic, readonly, copy) NSDate * _Nullable endDate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



typedef SWIFT_ENUM(NSInteger, StartShiftErrorType, open) {
  StartShiftErrorTypeNone = 0,
  StartShiftErrorTypeAlreadyExists = 1,
  StartShiftErrorTypeAlreadyExistsOnDifferentDevice = 2,
  StartShiftErrorTypeNotAllowedDueToDistanceFromHome = 3,
  StartShiftErrorTypeNotAllowedDueToScheduleTimeOfDay = 4,
  StartShiftErrorTypeNotAllowedDueToDistanceFromScheduleHomeAndTimeOfDay = 5,
  StartShiftErrorTypeGivenShiftAlreadyStarted = 6,
  StartShiftErrorTypeShiftWasStartedByDispatcher = 7,
  StartShiftErrorTypeNotAllMandatoryActionsAreFulfilled = 8,
};


SWIFT_CLASS("_TtC19BringgDriverSDKObjc17TaskInventoryObjc")
@interface TaskInventoryObjc : NSObject
@property (nonatomic, readonly) NSInteger id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable inventoryId;
@property (nonatomic, readonly, strong) NSNumber * _Nullable waypointId;
@property (nonatomic, readonly, copy) NSString * _Nullable externalId;
@property (nonatomic, readonly, strong) NSNumber * _Nullable price;
@property (nonatomic, readonly, strong) NSNumber * _Nullable originalQuantity;
@property (nonatomic, readonly, strong) NSNumber * _Nullable quantity;
@property (nonatomic, readonly, strong) NSNumber * _Nullable rejectedQuantity;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable note;
@property (nonatomic, readonly, copy) NSString * _Nullable scanString;
@property (nonatomic, readonly) BOOL pending;
@property (nonatomic, readonly, copy) NSURL * _Nullable image;
@property (nonatomic, readonly, strong) NSNumber * _Nullable height;
@property (nonatomic, readonly, strong) NSNumber * _Nullable width;
@property (nonatomic, readonly, strong) NSNumber * _Nullable length;
@property (nonatomic, readonly, copy) NSArray<TaskInventoryObjc *> * _Nullable subInventories;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum TaskNoteType : NSInteger;

SWIFT_CLASS("_TtC19BringgDriverSDKObjc12TaskNoteObjc")
@interface TaskNoteObjc : NSObject
@property (nonatomic, readonly) NSInteger id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable taskInventoryId;
@property (nonatomic, readonly) enum TaskNoteType type;
@property (nonatomic, readonly, copy) NSString * _Nullable note;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable updatedAt;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, TaskNoteType, open) {
  TaskNoteTypeNotSupported = -1,
  TaskNoteTypeNote = 0,
};

enum TaskStatus : NSInteger;
enum TaskType : NSInteger;
@class WaypointObjc;

SWIFT_CLASS("_TtC19BringgDriverSDKObjc8TaskObjc")
@interface TaskObjc : NSObject
@property (nonatomic, readonly) NSInteger id;
@property (nonatomic, readonly, copy) NSString * _Nullable externalId;
@property (nonatomic, readonly, strong) NSNumber * _Nullable userId;
@property (nonatomic, readonly) enum TaskStatus status;
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, strong) NSNumber * _Nullable priority;
@property (nonatomic, readonly) BOOL asap;
@property (nonatomic, readonly, copy) NSDate * _Nullable startedTime;
@property (nonatomic, readonly, copy) NSDate * _Nullable scheduledAt;
@property (nonatomic, readonly, strong) NSNumber * _Nullable activeWaypointId;
@property (nonatomic, readonly, strong) NSNumber * _Nullable tagId;
@property (nonatomic, readonly) enum TaskType taskTypeId;
@property (nonatomic, readonly, copy) NSString * _Nullable groupUUID;
@property (nonatomic, readonly, strong) NSNumber * _Nullable totalPrice;
@property (nonatomic, readonly, strong) NSNumber * _Nullable deliveryPrice;
@property (nonatomic, readonly, strong) NSNumber * _Nullable leftToBePaid;
@property (nonatomic, readonly, copy) NSArray<WaypointObjc *> * _Nonnull waypoints;
@property (nonatomic, readonly, copy) NSArray<TaskInventoryObjc *> * _Nullable taskInventories;
- (NSDictionary<NSString *, NSObject *> * _Nullable)getJSONDict SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, TaskStatus, open) {
  TaskStatusInvalid = -1,
  TaskStatusFree = 0,
  TaskStatusAssigned = 1,
  TaskStatusOnTheWay = 2,
  TaskStatusCheckedIn = 3,
  TaskStatusCheckedOut = 4,
  TaskStatusAccepted = 6,
  TaskStatusCancelled = 7,
};

typedef SWIFT_ENUM(NSInteger, TaskType, open) {
  TaskTypeNone = 1,
  TaskTypePickup = 2,
  TaskTypeReturnTask = 3,
  TaskTypeDelivery = 4,
  TaskTypePickupAndDelivery = 5,
};



SWIFT_PROTOCOL("_TtP19BringgDriverSDKObjc18UserEventsDelegate_")
@protocol UserEventsDelegate
- (void)userDidLogin;
- (void)userDidLogout;
@end


SWIFT_PROTOCOL("_TtP19BringgDriverSDKObjc23UserManagerObjcProtocol_")
@protocol UserManagerObjcProtocol
- (void)setUserTransportType:(enum DriverActivityType)transportType completion:(void (^ _Nullable)(NSError * _Nullable))completion;
@end


SWIFT_CLASS("_TtC19BringgDriverSDKObjc8UserObjc")
@interface UserObjc : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable atHome;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable profileImage;
@property (nonatomic, readonly) enum DriverActivityType defaultUserActivity;
@property (nonatomic, readonly) BOOL debug;
@property (nonatomic, readonly, copy) NSString * _Nullable uuid;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable phone;
@property (nonatomic, readonly, strong) NSNumber * _Nullable merchantId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19BringgDriverSDKObjc12WaypointObjc")
@interface WaypointObjc : NSObject
@property (nonatomic, readonly) NSInteger id;
@property (nonatomic, readonly) NSInteger taskId;
@property (nonatomic, readonly, copy) NSString * _Nullable address;
@property (nonatomic, readonly, copy) NSString * _Nullable addressSecondLine;
@property (nonatomic, readonly) enum AddressType addressType;
@property (nonatomic, readonly, copy) NSString * _Nullable locationName;
@property (nonatomic, readonly, strong) NSNumber * _Nullable lat;
@property (nonatomic, readonly, strong) NSNumber * _Nullable lng;
@property (nonatomic, readonly, copy) NSString * _Nullable zipcode;
@property (nonatomic, readonly, copy) NSString * _Nullable borough;
@property (nonatomic, readonly, copy) NSString * _Nullable city;
@property (nonatomic, readonly, copy) NSString * _Nullable street;
@property (nonatomic, readonly, copy) NSString * _Nullable state;
@property (nonatomic, readonly, copy) NSString * _Nullable neighborhood;
@property (nonatomic, readonly, copy) NSString * _Nullable district;
@property (nonatomic, readonly, strong) NSNumber * _Nullable houseNumber;
@property (nonatomic, readonly, copy) NSDate * _Nullable checkinTime;
@property (nonatomic, readonly, copy) NSDate * _Nullable checkoutTime;
@property (nonatomic, readonly, copy) NSDate * _Nullable scheduledAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable hasToLeaveBy;
@property (nonatomic, readonly, copy) NSDate * _Nullable etl;
@property (nonatomic, readonly, copy) NSDate * _Nullable eta;
@property (nonatomic, readonly, copy) NSDate * _Nullable noEarlierThan;
@property (nonatomic, readonly, copy) NSDate * _Nullable noLaterThan;
@property (nonatomic, readonly, strong) NSNumber * _Nullable position;
@property (nonatomic, readonly) BOOL done;
@property (nonatomic, readonly) BOOL late;
@property (nonatomic, readonly) BOOL asap;
@property (nonatomic, readonly, copy) NSString * _Nullable rating;
@property (nonatomic, readonly) enum PickupDropoffOption pickupDropoffOption;
@property (nonatomic, readonly) BOOL findMe;
@property (nonatomic, readonly, copy) NSString * _Nullable uiDataColor;
@property (nonatomic, readonly, strong) NSNumber * _Nullable uiDataNumber;
@property (nonatomic, readonly, copy) NSString * _Nullable companyName;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) BOOL phoneAvailable;
@property (nonatomic, readonly, strong) CustomerObjc * _Nullable customer;
@property (nonatomic, readonly, copy) NSArray<ContactObjc *> * _Nullable contacts;
@property (nonatomic, readonly, copy) NSArray<CustomerObjc *> * _Nullable extraCustomers;
@property (nonatomic, readonly, copy) NSArray<TaskNoteObjc *> * _Nullable taskNotes;
@property (nonatomic, readonly, copy) NSArray<TaskInventoryObjc *> * _Nullable inventoryItems;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
